// Generated by view binder compiler. Do not edit!
package com.readrops.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.readrops.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView itemDate;

  @NonNull
  public final TextView itemDescription;

  @NonNull
  public final ImageView itemFeedIcon;

  @NonNull
  public final TextView itemFeedName;

  @NonNull
  public final RelativeLayout itemFeedTitleLayout;

  @NonNull
  public final ImageView itemFolderIcon;

  @NonNull
  public final TextView itemFolderName;

  @NonNull
  public final ImageView itemImage;

  @NonNull
  public final TextView itemReadtime;

  @NonNull
  public final ImageView itemReadtimeIcon;

  @NonNull
  public final RelativeLayout itemReadtimeLayout;

  @NonNull
  public final TextView itemTitle;

  @NonNull
  public final RelativeLayout layoutEnd;

  @NonNull
  public final RelativeLayout layoutStart;

  private ListItemBinding(@NonNull RelativeLayout rootView, @NonNull TextView itemDate,
      @NonNull TextView itemDescription, @NonNull ImageView itemFeedIcon,
      @NonNull TextView itemFeedName, @NonNull RelativeLayout itemFeedTitleLayout,
      @NonNull ImageView itemFolderIcon, @NonNull TextView itemFolderName,
      @NonNull ImageView itemImage, @NonNull TextView itemReadtime,
      @NonNull ImageView itemReadtimeIcon, @NonNull RelativeLayout itemReadtimeLayout,
      @NonNull TextView itemTitle, @NonNull RelativeLayout layoutEnd,
      @NonNull RelativeLayout layoutStart) {
    this.rootView = rootView;
    this.itemDate = itemDate;
    this.itemDescription = itemDescription;
    this.itemFeedIcon = itemFeedIcon;
    this.itemFeedName = itemFeedName;
    this.itemFeedTitleLayout = itemFeedTitleLayout;
    this.itemFolderIcon = itemFolderIcon;
    this.itemFolderName = itemFolderName;
    this.itemImage = itemImage;
    this.itemReadtime = itemReadtime;
    this.itemReadtimeIcon = itemReadtimeIcon;
    this.itemReadtimeLayout = itemReadtimeLayout;
    this.itemTitle = itemTitle;
    this.layoutEnd = layoutEnd;
    this.layoutStart = layoutStart;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_date;
      TextView itemDate = rootView.findViewById(id);
      if (itemDate == null) {
        break missingId;
      }

      id = R.id.item_description;
      TextView itemDescription = rootView.findViewById(id);
      if (itemDescription == null) {
        break missingId;
      }

      id = R.id.item_feed_icon;
      ImageView itemFeedIcon = rootView.findViewById(id);
      if (itemFeedIcon == null) {
        break missingId;
      }

      id = R.id.item_feed_name;
      TextView itemFeedName = rootView.findViewById(id);
      if (itemFeedName == null) {
        break missingId;
      }

      id = R.id.item_feed_title_layout;
      RelativeLayout itemFeedTitleLayout = rootView.findViewById(id);
      if (itemFeedTitleLayout == null) {
        break missingId;
      }

      id = R.id.item_folder_icon;
      ImageView itemFolderIcon = rootView.findViewById(id);
      if (itemFolderIcon == null) {
        break missingId;
      }

      id = R.id.item_folder_name;
      TextView itemFolderName = rootView.findViewById(id);
      if (itemFolderName == null) {
        break missingId;
      }

      id = R.id.item_image;
      ImageView itemImage = rootView.findViewById(id);
      if (itemImage == null) {
        break missingId;
      }

      id = R.id.item_readtime;
      TextView itemReadtime = rootView.findViewById(id);
      if (itemReadtime == null) {
        break missingId;
      }

      id = R.id.item_readtime_icon;
      ImageView itemReadtimeIcon = rootView.findViewById(id);
      if (itemReadtimeIcon == null) {
        break missingId;
      }

      id = R.id.item_readtime_layout;
      RelativeLayout itemReadtimeLayout = rootView.findViewById(id);
      if (itemReadtimeLayout == null) {
        break missingId;
      }

      id = R.id.item_title;
      TextView itemTitle = rootView.findViewById(id);
      if (itemTitle == null) {
        break missingId;
      }

      id = R.id.layout_end;
      RelativeLayout layoutEnd = rootView.findViewById(id);
      if (layoutEnd == null) {
        break missingId;
      }

      id = R.id.layout_start;
      RelativeLayout layoutStart = rootView.findViewById(id);
      if (layoutStart == null) {
        break missingId;
      }

      return new ListItemBinding((RelativeLayout) rootView, itemDate, itemDescription, itemFeedIcon,
          itemFeedName, itemFeedTitleLayout, itemFolderIcon, itemFolderName, itemImage,
          itemReadtime, itemReadtimeIcon, itemReadtimeLayout, itemTitle, layoutEnd, layoutStart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
