// Generated by view binder compiler. Do not edit!
package com.readrops.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.readrops.app.R;
import com.readrops.app.utils.customviews.ReadropsWebView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityItemBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView activityItemAuthor;

  @NonNull
  public final TextView activityItemDate;

  @NonNull
  public final RelativeLayout activityItemDateLayout;

  @NonNull
  public final RelativeLayout activityItemDetailsLayout;

  @NonNull
  public final FloatingActionButton activityItemFab;

  @NonNull
  public final TextView activityItemReadtime;

  @NonNull
  public final ImageView activityItemReadtimeIcon;

  @NonNull
  public final RelativeLayout activityItemReadtimeLayout;

  @NonNull
  public final TextView activityItemTitle;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final CollapsingToolbarLayout collapsingLayout;

  @NonNull
  public final ImageView collapsingLayoutImage;

  @NonNull
  public final View collapsingLayoutScrim;

  @NonNull
  public final Toolbar collapsingLayoutToolbar;

  @NonNull
  public final CoordinatorLayout itemRoot;

  @NonNull
  public final FloatingActionButton itemStarFab;

  @NonNull
  public final ReadropsWebView itemWebview;

  private ActivityItemBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextView activityItemAuthor, @NonNull TextView activityItemDate,
      @NonNull RelativeLayout activityItemDateLayout,
      @NonNull RelativeLayout activityItemDetailsLayout,
      @NonNull FloatingActionButton activityItemFab, @NonNull TextView activityItemReadtime,
      @NonNull ImageView activityItemReadtimeIcon,
      @NonNull RelativeLayout activityItemReadtimeLayout, @NonNull TextView activityItemTitle,
      @NonNull AppBarLayout appBarLayout, @NonNull CollapsingToolbarLayout collapsingLayout,
      @NonNull ImageView collapsingLayoutImage, @NonNull View collapsingLayoutScrim,
      @NonNull Toolbar collapsingLayoutToolbar, @NonNull CoordinatorLayout itemRoot,
      @NonNull FloatingActionButton itemStarFab, @NonNull ReadropsWebView itemWebview) {
    this.rootView = rootView;
    this.activityItemAuthor = activityItemAuthor;
    this.activityItemDate = activityItemDate;
    this.activityItemDateLayout = activityItemDateLayout;
    this.activityItemDetailsLayout = activityItemDetailsLayout;
    this.activityItemFab = activityItemFab;
    this.activityItemReadtime = activityItemReadtime;
    this.activityItemReadtimeIcon = activityItemReadtimeIcon;
    this.activityItemReadtimeLayout = activityItemReadtimeLayout;
    this.activityItemTitle = activityItemTitle;
    this.appBarLayout = appBarLayout;
    this.collapsingLayout = collapsingLayout;
    this.collapsingLayoutImage = collapsingLayoutImage;
    this.collapsingLayoutScrim = collapsingLayoutScrim;
    this.collapsingLayoutToolbar = collapsingLayoutToolbar;
    this.itemRoot = itemRoot;
    this.itemStarFab = itemStarFab;
    this.itemWebview = itemWebview;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_item_author;
      TextView activityItemAuthor = rootView.findViewById(id);
      if (activityItemAuthor == null) {
        break missingId;
      }

      id = R.id.activity_item_date;
      TextView activityItemDate = rootView.findViewById(id);
      if (activityItemDate == null) {
        break missingId;
      }

      id = R.id.activity_item_date_layout;
      RelativeLayout activityItemDateLayout = rootView.findViewById(id);
      if (activityItemDateLayout == null) {
        break missingId;
      }

      id = R.id.activity_item_details_layout;
      RelativeLayout activityItemDetailsLayout = rootView.findViewById(id);
      if (activityItemDetailsLayout == null) {
        break missingId;
      }

      id = R.id.activity_item_fab;
      FloatingActionButton activityItemFab = rootView.findViewById(id);
      if (activityItemFab == null) {
        break missingId;
      }

      id = R.id.activity_item_readtime;
      TextView activityItemReadtime = rootView.findViewById(id);
      if (activityItemReadtime == null) {
        break missingId;
      }

      id = R.id.activity_item_readtime_icon;
      ImageView activityItemReadtimeIcon = rootView.findViewById(id);
      if (activityItemReadtimeIcon == null) {
        break missingId;
      }

      id = R.id.activity_item_readtime_layout;
      RelativeLayout activityItemReadtimeLayout = rootView.findViewById(id);
      if (activityItemReadtimeLayout == null) {
        break missingId;
      }

      id = R.id.activity_item_title;
      TextView activityItemTitle = rootView.findViewById(id);
      if (activityItemTitle == null) {
        break missingId;
      }

      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = rootView.findViewById(id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.collapsing_layout;
      CollapsingToolbarLayout collapsingLayout = rootView.findViewById(id);
      if (collapsingLayout == null) {
        break missingId;
      }

      id = R.id.collapsing_layout_image;
      ImageView collapsingLayoutImage = rootView.findViewById(id);
      if (collapsingLayoutImage == null) {
        break missingId;
      }

      id = R.id.collapsing_layout_scrim;
      View collapsingLayoutScrim = rootView.findViewById(id);
      if (collapsingLayoutScrim == null) {
        break missingId;
      }

      id = R.id.collapsing_layout_toolbar;
      Toolbar collapsingLayoutToolbar = rootView.findViewById(id);
      if (collapsingLayoutToolbar == null) {
        break missingId;
      }

      CoordinatorLayout itemRoot = (CoordinatorLayout) rootView;

      id = R.id.item_star_fab;
      FloatingActionButton itemStarFab = rootView.findViewById(id);
      if (itemStarFab == null) {
        break missingId;
      }

      id = R.id.item_webview;
      ReadropsWebView itemWebview = rootView.findViewById(id);
      if (itemWebview == null) {
        break missingId;
      }

      return new ActivityItemBinding((CoordinatorLayout) rootView, activityItemAuthor,
          activityItemDate, activityItemDateLayout, activityItemDetailsLayout, activityItemFab,
          activityItemReadtime, activityItemReadtimeIcon, activityItemReadtimeLayout,
          activityItemTitle, appBarLayout, collapsingLayout, collapsingLayoutImage,
          collapsingLayoutScrim, collapsingLayoutToolbar, itemRoot, itemStarFab, itemWebview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
