// Generated by view binder compiler. Do not edit!
package com.readrops.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.readrops.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditFeedLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView editFeedFolder;

  @NonNull
  public final Spinner editFeedFolderSpinner;

  @NonNull
  public final TextInputEditText editFeedNameEditText;

  @NonNull
  public final TextInputLayout editFeedNameTextinputlayout;

  @NonNull
  public final TextInputEditText editFeedUrlEditText;

  @NonNull
  public final TextInputLayout editFeedUrlTextinputlayout;

  private EditFeedLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView editFeedFolder, @NonNull Spinner editFeedFolderSpinner,
      @NonNull TextInputEditText editFeedNameEditText,
      @NonNull TextInputLayout editFeedNameTextinputlayout,
      @NonNull TextInputEditText editFeedUrlEditText,
      @NonNull TextInputLayout editFeedUrlTextinputlayout) {
    this.rootView = rootView;
    this.editFeedFolder = editFeedFolder;
    this.editFeedFolderSpinner = editFeedFolderSpinner;
    this.editFeedNameEditText = editFeedNameEditText;
    this.editFeedNameTextinputlayout = editFeedNameTextinputlayout;
    this.editFeedUrlEditText = editFeedUrlEditText;
    this.editFeedUrlTextinputlayout = editFeedUrlTextinputlayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EditFeedLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditFeedLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit_feed_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditFeedLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_feed_folder;
      TextView editFeedFolder = rootView.findViewById(id);
      if (editFeedFolder == null) {
        break missingId;
      }

      id = R.id.edit_feed_folder_spinner;
      Spinner editFeedFolderSpinner = rootView.findViewById(id);
      if (editFeedFolderSpinner == null) {
        break missingId;
      }

      id = R.id.edit_feed_name_edit_text;
      TextInputEditText editFeedNameEditText = rootView.findViewById(id);
      if (editFeedNameEditText == null) {
        break missingId;
      }

      id = R.id.edit_feed_name_textinputlayout;
      TextInputLayout editFeedNameTextinputlayout = rootView.findViewById(id);
      if (editFeedNameTextinputlayout == null) {
        break missingId;
      }

      id = R.id.edit_feed_url_edit_text;
      TextInputEditText editFeedUrlEditText = rootView.findViewById(id);
      if (editFeedUrlEditText == null) {
        break missingId;
      }

      id = R.id.edit_feed_url_textinputlayout;
      TextInputLayout editFeedUrlTextinputlayout = rootView.findViewById(id);
      if (editFeedUrlTextinputlayout == null) {
        break missingId;
      }

      return new EditFeedLayoutBinding((ConstraintLayout) rootView, editFeedFolder,
          editFeedFolderSpinner, editFeedNameEditText, editFeedNameTextinputlayout,
          editFeedUrlEditText, editFeedUrlTextinputlayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
