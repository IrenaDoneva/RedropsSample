// Generated by view binder compiler. Do not edit!
package com.readrops.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.readrops.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNotificationPermissionBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView notifPermissionAccount;

  @NonNull
  public final RelativeLayout notifPermissionAccountLayout;

  @NonNull
  public final RecyclerView notifPermissionAccountList;

  @NonNull
  public final Switch notifPermissionAccountSwitch;

  @NonNull
  public final TextView notifPermissionFeeds;

  @NonNull
  public final Switch notifPermissionFeedsSwitch;

  private ActivityNotificationPermissionBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView notifPermissionAccount,
      @NonNull RelativeLayout notifPermissionAccountLayout,
      @NonNull RecyclerView notifPermissionAccountList,
      @NonNull Switch notifPermissionAccountSwitch, @NonNull TextView notifPermissionFeeds,
      @NonNull Switch notifPermissionFeedsSwitch) {
    this.rootView = rootView;
    this.notifPermissionAccount = notifPermissionAccount;
    this.notifPermissionAccountLayout = notifPermissionAccountLayout;
    this.notifPermissionAccountList = notifPermissionAccountList;
    this.notifPermissionAccountSwitch = notifPermissionAccountSwitch;
    this.notifPermissionFeeds = notifPermissionFeeds;
    this.notifPermissionFeedsSwitch = notifPermissionFeedsSwitch;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationPermissionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationPermissionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notification_permission, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationPermissionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.notif_permission_account;
      TextView notifPermissionAccount = rootView.findViewById(id);
      if (notifPermissionAccount == null) {
        break missingId;
      }

      id = R.id.notif_permission_account_layout;
      RelativeLayout notifPermissionAccountLayout = rootView.findViewById(id);
      if (notifPermissionAccountLayout == null) {
        break missingId;
      }

      id = R.id.notif_permission_account_list;
      RecyclerView notifPermissionAccountList = rootView.findViewById(id);
      if (notifPermissionAccountList == null) {
        break missingId;
      }

      id = R.id.notif_permission_account_switch;
      Switch notifPermissionAccountSwitch = rootView.findViewById(id);
      if (notifPermissionAccountSwitch == null) {
        break missingId;
      }

      id = R.id.notif_permission_feeds;
      TextView notifPermissionFeeds = rootView.findViewById(id);
      if (notifPermissionFeeds == null) {
        break missingId;
      }

      id = R.id.notif_permission_feeds_switch;
      Switch notifPermissionFeedsSwitch = rootView.findViewById(id);
      if (notifPermissionFeedsSwitch == null) {
        break missingId;
      }

      return new ActivityNotificationPermissionBinding((NestedScrollView) rootView,
          notifPermissionAccount, notifPermissionAccountLayout, notifPermissionAccountList,
          notifPermissionAccountSwitch, notifPermissionFeeds, notifPermissionFeedsSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
